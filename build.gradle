buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.11'
    }
}

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.60'
    id 'com.google.protobuf' version '0.8.11'
    id 'java'
    id 'application'
}

mainClassName = 'main.MainKt'

group 'org.events'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

sourceSets {
    main.java.srcDirs += 'build/generated/source/proto/main/java'
}

dependencies {
    implementation 'com.google.protobuf:protobuf-java:3.6.1'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation group: 'org.eclipse.paho', name: 'org.eclipse.paho.client.mqttv3', version: '1.2.2'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
    implementation 'dev.misfitlabs.kotlinguice4:kotlin-guice:1.4.1'
    implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
    compile group: 'io.github.microutils', name: 'kotlin-logging', version: '1.7.8'

    testImplementation group: 'org.jetbrains.kotlin', name: 'kotlin-test-junit', version: '1.3.61'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.5.2'
    testImplementation group: 'com.nhaarman', name: 'mockito-kotlin', version: '1.6.0'
    testImplementation 'org.mockito:mockito-inline:2.13.0'
}

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict']
        jvmTarget = '1.8'
    }
    dependsOn('generateProto')
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"

    dependsOn('generateProto')
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.6.1'
    }
    generateProtoTasks {
        all().each { task ->

        }
    }
}

def loggingTestSettings = {
    events "failed", "started", "passed", "skipped"
    exceptionFormat "short"
    // set options for log level DEBUG
    debug {
        events "started", "skipped", "passed", "failed"
        exceptionFormat "full"
    }
    // remove standard output/error logging from --info builds
    // by assigning only 'failed' and 'skipped' events
    info.events = ["failed", "started", "passed", "skipped"]
}

test {
    testLogging loggingTestSettings
}
